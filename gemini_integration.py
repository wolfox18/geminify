import os
import json
from dotenv import load_dotenv
import google.generativeai as genai
import asyncio

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á–∏ –∏–∑ .env
load_dotenv()
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

if not GEMINI_API_KEY:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω –∫–ª—é—á API –¥–ª—è Gemini. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à .env —Ñ–∞–π–ª.")

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º API-–∫–ª–∏–µ–Ω—Ç –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
genai.configure(api_key=GEMINI_API_KEY)


# --- –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ---

async def get_gemini_response(user_prompt: str) -> str:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ API Gemini, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞ prompt_config.json.
    –ß–∏—Ç–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ.
    """
    try:
        # –®–∞–≥ 1: –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞
        with open('prompt_config.json', 'r', encoding='utf-8') as f:
            config = json.load(f)

        # –®–∞–≥ 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏–∑ —Ñ–∞–π–ª–∞
        model = genai.GenerativeModel(
            # üëá –í–û–¢ –ò–ó–ú–ï–ù–ï–ù–ò–ï: —á–∏—Ç–∞–µ–º –∏–º—è –º–æ–¥–µ–ª–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
            model_name=config["model_name"], 
            generation_config=config["generation_config"],
            safety_settings=config["safety_settings"]
        )

        # –®–∞–≥ 3: –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        full_prompt = f"{config['system_prompt']}\n\n–ó–ê–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:\n{user_prompt}"

        # –®–∞–≥ 4: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ API
        response = await asyncio.to_thread(
            model.generate_content,
            full_prompt
        )
        return response.text

    except FileNotFoundError:
        error_message = "–û—à–∏–±–∫–∞: –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ prompt_config.json –Ω–µ –Ω–∞–π–¥–µ–Ω."
        print(error_message)
        return error_message
    except json.JSONDecodeError:
        error_message = "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å prompt_config.json. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å JSON."
        print(error_message)
        return error_message
    except KeyError as e:
        error_message = f"–û—à–∏–±–∫–∞: –≤ —Ñ–∞–π–ª–µ prompt_config.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª—é—á: {e}."
        print(error_message)
        return error_message
    except Exception as e:
        error_message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Gemini API: {e}"
        print(error_message)
        return f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏. üòî\n\n**–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n`{e}`"