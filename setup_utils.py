import requests
import base64
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID –∏ Secret –∫–ª–∏–µ–Ω—Ç–∞
load_dotenv()
CLIENT_ID = os.getenv("SPOTIFY_CLIENT_ID")
CLIENT_SECRET = os.getenv("SPOTIFY_CLIENT_SECRET")
# –≠—Ç–æ—Ç Redirect URI –¥–æ–ª–∂–µ–Ω —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Ç–µ–º, —á—Ç–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Spotify
REDIRECT_URI = "https://www.google.com/"


def get_refresh_token():
    """–û–±–º–µ–Ω–∏–≤–∞–µ—Ç –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∫–æ–¥ –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π Refresh Token."""
    one_time_code = input("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à ONE_TIME_CODE –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞:\n> ")
    if not one_time_code:
        print("üõë –ö–æ–¥ –Ω–µ –±—ã–ª –≤–≤–µ–¥—ë–Ω. –í—ã—Ö–æ–¥.")
        return

    auth_string = f"{CLIENT_ID}:{CLIENT_SECRET}"
    auth_base64 = str(base64.b64encode(auth_string.encode('utf-8')), 'utf-8')

    url = "https://accounts.spotify.com/api/token"
    headers = {
        "Authorization": f"Basic {auth_base64}",
        "Content-Type": "application/x-www-form-urlencoded"
    }
    data = {
        "grant_type": "authorization_code",
        "code": one_time_code,
        "redirect_uri": REDIRECT_URI
    }

    try:
        result = requests.post(url, headers=headers, data=data)
        result.raise_for_status()
        json_result = result.json()
        refresh_token = json_result.get("refresh_token")

        print("\n‚úÖ –£–°–ü–ï–®–ù–û!")
        print("–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç Refresh Token –≤ –≤–∞—à .env —Ñ–∞–π–ª –∫–∞–∫ SPOTIFY_REFRESH_TOKEN")
        print("="*50)
        print(refresh_token)
        print("="*50)

    except requests.exceptions.RequestException as e:
        print(f"üî• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ: {e}")
        print(f"–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {result.text if 'result' in locals() else '–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞'}")


def create_playlist():
    """–°–æ–∑–¥–∞—ë—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç 'Geminify' –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ ID."""
    refresh_token = os.getenv("SPOTIFY_REFRESH_TOKEN")
    if not refresh_token:
        print("üõë –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ Refresh Token –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ .env —Ñ–∞–π–ª.")
        return
        
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º —Å–≤–µ–∂–∏–π Access Token
    auth_string = f"{CLIENT_ID}:{CLIENT_SECRET}"
    auth_base64 = str(base64.b64encode(auth_string.encode('utf-8')), 'utf-8')
    url_token = "https://accounts.spotify.com/api/token"
    headers_token = {"Authorization": f"Basic {auth_base64}", "Content-Type": "application/x-www-form-urlencoded"}
    data_token = {"grant_type": "refresh_token", "refresh_token": refresh_token}
    
    result = requests.post(url_token, headers=headers_token, data=data_token)
    if result.status_code != 200:
        print("üî• –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å Access Token –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–µ–π–ª–∏—Å—Ç–∞.")
        return
        
    access_token = result.json().get("access_token")

    # –ü–æ–ª—É—á–∏–º User ID
    user_info_result = requests.get("https://api.spotify.com/v1/me", headers={"Authorization": f"Bearer {access_token}"})
    if user_info_result.status_code != 200:
        print("üî• –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å User ID.")
        return
    user_id = user_info_result.json().get("id")

    # –°–æ–∑–¥–∞–¥–∏–º –ø–ª–µ–π–ª–∏—Å—Ç
    url_playlist = f"https://api.spotify.com/v1/users/{user_id}/playlists"
    headers_playlist = {"Authorization": f"Bearer {access_token}", "Content-Type": "application/json"}
    data_playlist = {
        "name": "Geminify",
        "description": "Make AI playlist great again!",
        "public": False
    }

    try:
        result = requests.post(url_playlist, headers=headers_playlist, json=data_playlist)
        result.raise_for_status()
        playlist_id = result.json().get("id")
        
        print("\n‚úÖ –£–°–ü–ï–®–ù–û!")
        print("–ü–ª–µ–π–ª–∏—Å—Ç 'Geminify Playlist' —Å–æ–∑–¥–∞–Ω.")
        print("–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç ID –≤ –≤–∞—à .env —Ñ–∞–π–ª –∫–∞–∫ SPOTIFY_PLAYLIST_ID")
        print("="*50)
        print(playlist_id)
        print("="*50)

    except requests.exceptions.RequestException as e:
        print(f"üî• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞: {e}")
        print(f"–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {result.text if 'result' in locals() else '–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞'}")


if __name__ == "__main__":
    print("--- –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ ---")
    choice = input("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?\n1 - –ü–æ–ª—É—á–∏—Ç—å Refresh Token\n2 - –°–æ–∑–¥–∞—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç 'Geminify'\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ")
    if choice == "1":
        get_refresh_token()
    elif choice == "2":
        create_playlist()
    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")