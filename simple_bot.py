import os  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –û–°
from dotenv import load_dotenv  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –Ω–æ–≤–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ConversationHandler, # –î–æ–±–∞–≤–∏–ª–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞–º–∏
    MessageHandler,
    filters, # –î–æ–±–∞–≤–∏–ª–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)
    ContextTypes
)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Gemini
from gemini_integration import get_gemini_response

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞ –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
load_dotenv()

# --- –í–ê–®–ò –î–ê–ù–ù–´–ï (—Ç–µ–ø–µ—Ä—å —á–∏—Ç–∞—é—Ç—Å—è –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è) ---
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–æ–∫–µ–Ω –±—ã–ª –Ω–∞–π–¥–µ–Ω
if not BOT_TOKEN:
    print("–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –¥–ª—è Telegram –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à .env —Ñ–∞–π–ª.")
    exit()

# --- –°–û–°–¢–û–Ø–ù–ò–Ø –î–õ–Ø –î–ò–ê–õ–û–ì–ê ---
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç—Ç–∞–ø–æ–≤ –¥–∏–∞–ª–æ–≥–∞.
# –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –±–æ—Ç—É –ø–æ–Ω—è—Ç—å, –∫–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ–Ω —Å–µ–π—á–∞—Å –∂–¥–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
WAITING_FOR_GEMINI_PROMPT = 1

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ö–û–ú–ê–ù–î –ò –ö–ù–û–ü–û–ö ---

# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è, –∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–≤–µ –∫–Ω–æ–ø–∫–∏."""
    keyboard = [
        [InlineKeyboardButton("–ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞", callback_data="simple_button_pressed")],
        # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å—Ç–∏—Ç –¥–∏–∞–ª–æ–≥ —Å Gemini
        [InlineKeyboardButton("‚úçÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Gemini", callback_data="start_gemini_test")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç. –ù–∞–∂–º–∏ '–ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞' –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Gemini', —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.",
        reply_markup=reply_markup
    )

# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ "–ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞"
async def simple_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –ø—Ä–æ—Å—Ç—É—é –∫–Ω–æ–ø–∫—É."""
    query = update.callback_query
    await query.answer()
    await query.message.reply_text("–≠—Ç–æ –æ—Ç–≤–µ—Ç –æ—Ç –ø—Ä–æ—Å—Ç–æ–π –∫–Ω–æ–ø–∫–∏!")

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–∏–∞–ª–æ–≥ —Å Gemini
async def start_gemini_dialog(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Gemini".
    –ü—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.
    """
    query = update.callback_query
    await query.answer()
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –∏ –¥–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    await query.edit_message_text(text="–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –ø–µ—Ä–µ—à–ª—é –µ–≥–æ Gemini.")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–æ—Ç—É —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –±—É–¥–µ—Ç –∂–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    return WAITING_FOR_GEMINI_PROMPT

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Gemini
async def handle_gemini_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ Gemini,
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥.
    """
    user_message = update.message.text
    
    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ –∑–∞–ø—Ä–æ—Å
    await update.message.reply_text("‚è≥ –ú–∏–Ω—É—Ç–∫—É, –æ—Ç–ø—Ä–∞–≤–ª—è—é –≤–∞—à –∑–∞–ø—Ä–æ—Å –≤ Gemini...")
    
    # –í—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–æ–¥—É–ª—è gemini_integration
    gemini_response = await get_gemini_response(user_message)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Gemini –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(f"ü§ñ **–û—Ç–≤–µ—Ç –æ—Ç Gemini:**\n\n{gemini_response}", parse_mode='Markdown')
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥
    return ConversationHandler.END

# –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–∏–∞–ª–æ–≥–∞
async def cancel_dialog(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –∫–æ–º–∞–Ω–¥–æ–π /start.")
    return ConversationHandler.END


# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    application = Application.builder().token(BOT_TOKEN).build()

    # –°–æ–∑–¥–∞–µ–º ConversationHandler –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–º —Å Gemini
    gemini_conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(start_gemini_dialog, pattern='^' + 'start_gemini_test' + '$')],
        states={
            WAITING_FOR_GEMINI_PROMPT: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_gemini_message)],
        },
        fallbacks=[CommandHandler('cancel', cancel_dialog)],
    )

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(simple_button_handler, pattern='^' + 'simple_button_pressed' + '$'))
    application.add_handler(gemini_conv_handler) # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–∞—à –Ω–æ–≤—ã–π —Å–ª–æ–∂–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()


if __name__ == "__main__":
    asyncio.run(main())